/*

The real power of mixins comes when you pass them arguments. 
Arguments are declared as a parenthesized, comma-separated list of variables. 

Each of those variables is assigned a value each time the mixin is used.

@mixin default-box($color, $boxModel, $padding) {
  $borderColor: $color;
  border: 1px solid $borderColor;
  clear: both;
  display: $boxModel;
  margin: 5px 0;
  padding: 5px $padding;
}

header{ @include default-box(#666, block, 10px); }
footer{ @include default-box(#999, inline-block, 5px);
*/
/* Mixins */
@import "../../common";

.player-chip-count > .monospaced-font-bold {
  font-size: 1.2em;
  @include lg {
    font-size: 1.2em;
  }
  @include xxl {
    font-size: 1.33em;
  }
}

// current seated player's turn to act
.active-player {
  border: 0.3em;
  border-style: solid;
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  border-color: $neutral-accent-100;
}

.disabled {
  opacity: 0.9;
}

div[class^="seat-"] > h4 {
  margin: 0;
}
div[class^="seat-"] > h5 {
  margin: 0;
}
div[class^="seat-"] > h3 {
  margin: 0;
}

.seat-0 {
  @extend %seat;
}

.seat-0-container {
  grid-area: 5/3;
}

.seat-1 {
  @extend %seat;
}

.seat-1-container {
  grid-area: 4/1;
}

.seat-2 {
  @extend %seat;
  grid-area: 2/1;
}

.seat-2-container {
  grid-area: 2/1;
}

.seat-3 {
  @extend %seat;
  grid-area: 1/3;
}

.seat-3-container {
  grid-area: 1/3;
}

.seat-4 {
  @extend %seat;
  grid-area: 2/5;
}

.seat-4-container {
  grid-area: 2/5;
}

.seat-5 {
  @extend %seat;
}

.seat-5-container {
  grid-area: 4/5;
}

.empty-seat {
  opacity: 0.2;
  color: transparent;
}

.empty-seat:hover {
  opacity: 0.2;
  transition: ease-in-out 0.1s;
  color: $primary-colour-700;
}
