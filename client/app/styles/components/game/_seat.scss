/*

The real power of mixins comes when you pass them arguments. 
Arguments are declared as a parenthesized, comma-separated list of variables. 

Each of those variables is assigned a value each time the mixin is used.

@mixin default-box($color, $boxModel, $padding) {
  $borderColor: $color;
  border: 1px solid $borderColor;
  clear: both;
  display: $boxModel;
  margin: 5px 0;
  padding: 5px $padding;
}

header{ @include default-box(#666, block, 10px); }
footer{ @include default-box(#999, inline-block, 5px);
*/
/* Mixins */
@import "../../common";

.player-chip-count {
  margin: auto;
  margin-top: 0.5em;
}

// current seated player's turn to act
.active-player {
  border: 0.2em;
  border-style: solid;
  border-color: white;
}

.disabled {
  background-color: $color-grey-400;
}

.seat-0 {
  @extend %seat;
}

.seat-0-container {
  grid-area: 5/3;
}

.seat-1 {
  @extend %seat;
}

.seat-1-container {
  grid-area: 4/1;
}

.seat-2 {
  @extend %seat;
  grid-area: 2/1;
}

.seat-2-container {
  grid-area: 2/1;
}

.seat-3 {
  @extend %seat;
  grid-area: 1/3;
}

.seat-3-container {
  grid-area: 1/3;
}

.seat-4 {
  @extend %seat;
  grid-area: 2/5;
}

.seat-4-container {
  grid-area: 2/5;
}

.seat-5 {
  @extend %seat;
}

.seat-5-container {
  grid-area: 4/5;
}

.empty-seat {
  opacity: 0.2;
  color: transparent;
}

.empty-seat:hover {
  opacity: 0.88;
  transition: ease-in-out 0.1s;
  color: white;
}
